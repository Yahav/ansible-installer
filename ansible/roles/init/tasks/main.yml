---

- name: Running context
  debug:
    msg: >-
      Running Ansible on {{ inventory_hostname }} with OS {{ ansible_distribution }}
      {{ ansible_distribution_release }} {{ ansible_distribution_version }} {{ ansible_architecture }} ({{ app_env }})"

- name: RHEL OS Check
  fail:
    msg: "The AzuraCast Ansible installation can only be installed onto computers running RHEL based repos."
  when: ansible_distribution_file_variety != 'RedHat'

- name: RHEL Version Check
  fail:
    msg: "The AzuraCast Ansible installation can only be installed onto computers running RHEL 8+."
  when:
    - ansible_distribution_version is version('8', '<')

- name: Import EPEL GPG key.
  rpm_key:
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    state: present

# - name: Import remi GPG key.
#   rpm_key:
#     key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
#     state: present

# - name: install EPEL
#   dnf:
#     name: epel-release
#     state: latest


- name: install Raven Multimedia Repo
  dnf:
    name: https://pkgs.sysadmins.ws/el{{ansible_distribution_major_version}}/base/x86_64/raven-release.el{{ansible_distribution_major_version}}.noarch.rpm
    state: latest
    disable_gpg_check: True

# - name: install Remi Repo
#   dnf:
#     name: https://rpms.remirepo.net/enterprise/remi-release-{{ansible_distribution_major_version}}.rpm
#     state: latest

# - name: Adding Remi repo pgp keys
#   ansible.builtin.get_url:
#     url: https://rpms.remirepo.net/enterprise/{{ansible_distribution_major_version}}/RPM-GPG-KEY-remi
#     dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-remi.el{{ansible_distribution_major_version}}
    
# - name: Add remi repo 
#   yum_repository: 
#     name: remi
#     description: Remi repo for Enterprise Linux {{ansible_distribution_major_version}}
#     mirrorlist: http://cdn.remirepo.net/enterprise/9/remi/$basearch/mirror
#     enabled: yes
#     gpgcheck: yes
#     repo_gpgcheck: yes
#     gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi.el{{ansible_distribution_major_version}}

# - name: Add remi-modular repo
#   yum_repository:
#     name: remi-modular
#     description: Remi's Modular repository for Enterprise Linux {{ansible_distribution_major_version}} - $basearch
#     mirrorlist: http://cdn.remirepo.net/enterprise/{{ansible_distribution_major_version}}/modular/$basearch/mirror
#     enabled: yes
#     gpgcheck: yes
#     repo_gpgcheck: yes
#     gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi.el9

# - name: Adding remi-safe repo
#   yum_repository:
#     name: remi-safe 
#     description: remi safe repository for Enterprise Linux {{ansible_distribution_major_version}} - $basearch
#     mirrorlist: http://cdn.remirepo.net/enterprise/{{ansible_distribution_major_version}}/modular/$basearch/mirror
#     enabled: yes
#     gpgcheck: yes
#     repo_gpgcheck: yes
#     gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi.el{{ansible_distribution_major_version}}


- name: Ensure the EPEL repo is enabled
  community.general.dnf_config_manager:
    name:
      - epel
    state: enabled

- name: Install Powertools for RHEL 8
  community.general.dnf_config_manager:
    name:
      - powertools
    state: enabled
  when: ansible_facts['distribution_major_version'] == "8"

- name: Install Powertools for RHEL > 8
  community.general.dnf_config_manager:
    name:
      - crb
    state: enabled
  when: ansible_facts['distribution_major_version'] | int > 8


- name: upgrade all packages
  dnf:
    name: "*"
    enablerepo:
      -epel
    state: latest

- name: Install system packages
  dnf:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
      - curl
      - wget
      - tar
      - "@development tools"
      - pwgen
      - whois
      - gzip
      - zip
      - unzip
      - zstd
      - python3-pip
      - ca-certificates

- name: Update pip components
  pip:
    name: pip
